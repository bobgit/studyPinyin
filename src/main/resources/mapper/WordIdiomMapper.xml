<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="github.com.bobgit.study.pinyin.dao.WordIdiomMapper">
  <resultMap id="BaseResultMap" type="github.com.bobgit.study.pinyin.model.WordIdiom">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="abbreviation" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="derivation" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="example" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="explanation" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="pinyin" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="word" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, abbreviation, derivation, example, explanation, pinyin, word, remark
  </sql>




  <!-- 根据条件查询列表 -->
  <select id="listWordIdiom" parameterType="github.com.bobgit.study.pinyin.requestParam.WordRequest" resultMap="BaseResultMap">
    select t.* from word_idiom t
    <where>
      <if test="word != null">
        and t.word like #{word}
      </if>
    </where>
    <choose>
      <when test="sort!=null and order!=null">
        order by ${sort} ${order},t.id
      </when>
      <otherwise>
        order by t.id
      </otherwise>
    </choose>
    <choose>
      <when test="start!=null and size!=null">
        limit #{start},#{size}
      </when>
      <when test="start==null and size!=null">
        limit #{size}
      </when>
    </choose>
  </select>

  <!-- 根据条件查询列表 总和 -->
  <select id="listWordIdiomCount" parameterType="github.com.bobgit.study.pinyin.requestParam.WordRequest" resultType="Integer">
    select count(t.id) from word_idiom t
    <where>
      <if test="word != null">
        and t.word like #{word}
      </if>
    </where>
  </select>




  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from word_idiom
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from word_idiom
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="github.com.bobgit.study.pinyin.model.WordIdiom">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into word_idiom (abbreviation, derivation, example, 
      explanation, pinyin, word, 
      remark)
    values (#{abbreviation,jdbcType=VARCHAR}, #{derivation,jdbcType=VARCHAR}, #{example,jdbcType=VARCHAR}, 
      #{explanation,jdbcType=VARCHAR}, #{pinyin,jdbcType=VARCHAR}, #{word,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="github.com.bobgit.study.pinyin.model.WordIdiom">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into word_idiom
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="abbreviation != null">
        abbreviation,
      </if>
      <if test="derivation != null">
        derivation,
      </if>
      <if test="example != null">
        example,
      </if>
      <if test="explanation != null">
        explanation,
      </if>
      <if test="pinyin != null">
        pinyin,
      </if>
      <if test="word != null">
        word,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="abbreviation != null">
        #{abbreviation,jdbcType=VARCHAR},
      </if>
      <if test="derivation != null">
        #{derivation,jdbcType=VARCHAR},
      </if>
      <if test="example != null">
        #{example,jdbcType=VARCHAR},
      </if>
      <if test="explanation != null">
        #{explanation,jdbcType=VARCHAR},
      </if>
      <if test="pinyin != null">
        #{pinyin,jdbcType=VARCHAR},
      </if>
      <if test="word != null">
        #{word,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="github.com.bobgit.study.pinyin.model.WordIdiom">
    update word_idiom
    <set>
      <if test="abbreviation != null">
        abbreviation = #{abbreviation,jdbcType=VARCHAR},
      </if>
      <if test="derivation != null">
        derivation = #{derivation,jdbcType=VARCHAR},
      </if>
      <if test="example != null">
        example = #{example,jdbcType=VARCHAR},
      </if>
      <if test="explanation != null">
        explanation = #{explanation,jdbcType=VARCHAR},
      </if>
      <if test="pinyin != null">
        pinyin = #{pinyin,jdbcType=VARCHAR},
      </if>
      <if test="word != null">
        word = #{word,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="github.com.bobgit.study.pinyin.model.WordIdiom">
    update word_idiom
    set abbreviation = #{abbreviation,jdbcType=VARCHAR},
      derivation = #{derivation,jdbcType=VARCHAR},
      example = #{example,jdbcType=VARCHAR},
      explanation = #{explanation,jdbcType=VARCHAR},
      pinyin = #{pinyin,jdbcType=VARCHAR},
      word = #{word,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>